<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="captchaCheck.Cookie" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAElTeXN0ZW0sIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
        cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAaU3lzdGVtLk5ldC5Db29raWVD
        b250YWluZXIGAAAADW1fZG9tYWluVGFibGUPbV9tYXhDb29raWVTaXplDG1fbWF4Q29va2llcxVtX21h
        eENvb2tpZXNQZXJEb21haW4HbV9jb3VudA5tX2ZxZG5NeURvbWFpbgMAAAAAARxTeXN0ZW0uQ29sbGVj
        dGlvbnMuSGFzaHRhYmxlCAgICAIAAAAJAwAAAAAQAAAsAQAAFAAAAAgAAAAGBAAAAAAEAwAAABxTeXN0
        ZW0uQ29sbGVjdGlvbnMuSGFzaHRhYmxlBwAAAApMb2FkRmFjdG9yB1ZlcnNpb24IQ29tcGFyZXIQSGFz
        aENvZGVQcm92aWRlcghIYXNoU2l6ZQRLZXlzBlZhbHVlcwAAAwMABQULCBxTeXN0ZW0uQ29sbGVjdGlv
        bnMuSUNvbXBhcmVyJFN5c3RlbS5Db2xsZWN0aW9ucy5JSGFzaENvZGVQcm92aWRlcgjsUTg/AQAAAAoK
        AwAAAAkFAAAACQYAAAAQBQAAAAEAAAAGBwAAAA1reWZ3LjEyMzA2LmNuEAYAAAABAAAACQgAAAAFCAAA
        ABNTeXN0ZW0uTmV0LlBhdGhMaXN0AQAAAAZtX2xpc3QDLFN5c3RlbS5Db2xsZWN0aW9ucy5Tb3J0ZWRM
        aXN0K1N5bmNTb3J0ZWRMaXN0AgAAAAkJAAAABAkAAAAsU3lzdGVtLkNvbGxlY3Rpb25zLlNvcnRlZExp
        c3QrU3luY1NvcnRlZExpc3QJAAAABV9saXN0BV9yb290D1NvcnRlZExpc3Qra2V5cxFTb3J0ZWRMaXN0
        K3ZhbHVlcxBTb3J0ZWRMaXN0K19zaXplElNvcnRlZExpc3QrdmVyc2lvbhNTb3J0ZWRMaXN0K2NvbXBh
        cmVyElNvcnRlZExpc3Qra2V5TGlzdBRTb3J0ZWRMaXN0K3ZhbHVlTGlzdAMCBQUAAAMDAx1TeXN0ZW0u
        Q29sbGVjdGlvbnMuU29ydGVkTGlzdAgIG1N5c3RlbS5Db2xsZWN0aW9ucy5Db21wYXJlciVTeXN0ZW0u
        Q29sbGVjdGlvbnMuU29ydGVkTGlzdCtLZXlMaXN0J1N5c3RlbS5Db2xsZWN0aW9ucy5Tb3J0ZWRMaXN0
        K1ZhbHVlTGlzdAkKAAAACQsAAAAJDAAAAAkMAAAAAAAAAAAAAAAJDQAAAAoKBAoAAAAdU3lzdGVtLkNv
        bGxlY3Rpb25zLlNvcnRlZExpc3QHAAAABGtleXMGdmFsdWVzBV9zaXplB3ZlcnNpb24IY29tcGFyZXIH
        a2V5TGlzdAl2YWx1ZUxpc3QFBQAABAMDCAgkU3lzdGVtLk5ldC5QYXRoTGlzdCtQYXRoTGlzdENvbXBh
        cmVyAgAAACVTeXN0ZW0uQ29sbGVjdGlvbnMuU29ydGVkTGlzdCtLZXlMaXN0J1N5c3RlbS5Db2xsZWN0
        aW9ucy5Tb3J0ZWRMaXN0K1ZhbHVlTGlzdAkOAAAACQ8AAAADAAAAAwAAAAkQAAAACgkRAAAABAsAAAAN
        U3lzdGVtLk9iamVjdAAAAAAQDAAAAAAAAAAEDQAAABtTeXN0ZW0uQ29sbGVjdGlvbnMuQ29tcGFyZXIB
        AAAAC0NvbXBhcmVJbmZvAyBTeXN0ZW0uR2xvYmFsaXphdGlvbi5Db21wYXJlSW5mbwkSAAAAEA4AAAAQ
        AAAABhMAAAAEL290bgYUAAAACS9wYXNzcG9ydAYVAAAAAS8NDRAPAAAAEAAAAAkWAAAACRcAAAAJGAAA
        AA0NBRAAAAAkU3lzdGVtLk5ldC5QYXRoTGlzdCtQYXRoTGlzdENvbXBhcmVyAAAAAAIAAAAEEQAAACdT
        eXN0ZW0uQ29sbGVjdGlvbnMuU29ydGVkTGlzdCtWYWx1ZUxpc3QBAAAACnNvcnRlZExpc3QDHVN5c3Rl
        bS5Db2xsZWN0aW9ucy5Tb3J0ZWRMaXN0CQoAAAAEEgAAACBTeXN0ZW0uR2xvYmFsaXphdGlvbi5Db21w
        YXJlSW5mbwQAAAAGbV9uYW1lCXdpbjMyTENJRAdjdWx0dXJlDW1fU29ydFZlcnNpb24BAAADCAggU3lz
        dGVtLkdsb2JhbGl6YXRpb24uU29ydFZlcnNpb24GGgAAAAV6aC1DTgAAAAAECAAACgUWAAAAG1N5c3Rl
        bS5OZXQuQ29va2llQ29sbGVjdGlvbgUAAAAJbV92ZXJzaW9uBm1fbGlzdAttX1RpbWVTdGFtcBRtX2hh
        c19vdGhlcl92ZXJzaW9ucwxtX0lzUmVhZE9ubHkAAwAAAAgcU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5
        TGlzdA0BAQIAAAAAAAAACRsAAABAwPvfr1nViAEBARcAAAAWAAAAAAAAAAkcAAAAQKRjHIxU1YgBAQEY
        AAAAFgAAAAAAAAAJHQAAAEDA+9+vWdWIAQEEGwAAABxTeXN0ZW0uQ29sbGVjdGlvbnMuQXJyYXlMaXN0
        AwAAAAZfaXRlbXMFX3NpemUIX3ZlcnNpb24FAAAICAkeAAAAAQAAAAIAAAABHAAAABsAAAAJHwAAAAIA
        AAADAAAAAR0AAAAbAAAACSAAAAAFAAAABwAAABAeAAAABAAAAAkhAAAADQMQHwAAAAQAAAAJIgAAAAkj
        AAAADQIQIAAAAAgAAAAJJAAAAAklAAAACSYAAAAJJwAAAAkoAAAADQMFIQAAABFTeXN0ZW0uTmV0LkNv
        b2tpZRUAAAAJbV9jb21tZW50DG1fY29tbWVudFVyaQ9tX2Nvb2tpZVZhcmlhbnQJbV9kaXNjYXJkCG1f
        ZG9tYWluEW1fZG9tYWluX2ltcGxpY2l0CW1fZXhwaXJlcwZtX25hbWUGbV9wYXRoD21fcGF0aF9pbXBs
        aWNpdAZtX3BvcnQPbV9wb3J0X2ltcGxpY2l0C21fcG9ydF9saXN0CG1fc2VjdXJlCm1faHR0cE9ubHkL
        bV90aW1lU3RhbXAHbV92YWx1ZQltX3ZlcnNpb24LbV9kb21haW5LZXkPSXNRdW90ZWRWZXJzaW9uDklz
        UXVvdGVkRG9tYWluAQQEAAEAAAEBAAEABwAAAAEAAQAAClN5c3RlbS5VcmkCAAAAGFN5c3RlbS5OZXQu
        Q29va2llVmFyaWFudAIAAAABAQ0BAQgBAQ0IAQECAAAACQQAAAAKBdb///8YU3lzdGVtLk5ldC5Db29r
        aWVWYXJpYW50AQAAAAd2YWx1ZV9fAAgCAAAAAQAAAAAGKwAAAA1reWZ3LjEyMzA2LmNuAQAAAAAAAAAA
        BiwAAAAKSlNFU1NJT05JRAYtAAAABC9vdG4ACQQAAAABCgAAgMYU4K9Z1YgGLwAAACA1MjA4NDI1RjQ1
        NEU5RkM4NTgyRUJDRDM2NTE0QkZDRgAAAAAJBAAAAAAAASIAAAAhAAAACQQAAAAKAc/////W////AQAA
        AAAGMgAAAA1reWZ3LjEyMzA2LmNuAQAAAAAAAAAABjMAAAARX3Bhc3Nwb3J0X3Nlc3Npb24GNAAAAAkv
        cGFzc3BvcnQACQQAAAABCgAAYHp3HIxU1YgGNgAAACQ1MTNhM2E5MTk3NmU0ODJjYTAzNzEwODcwNDc4
        OTFlODI2OTEAAAAACQQAAAAAAAEjAAAAIQAAAAkEAAAACgHI////1v///wEAAAAACQcAAAABAAAAAAAA
        AAAGOgAAAAxfcGFzc3BvcnRfY3QGOwAAAAkvcGFzc3BvcnQACQQAAAABCgAAoLcqkTxU1YgGPQAAACVk
        NzBmOTk3ZWYzNjU0MzVkOWY4MzQ3ZjMzNTlmZjg2ZXQzMTQ1AAAAAAkEAAAAAAABJAAAACEAAAAJBAAA
        AAoBwf///9b///8BAAAAAAkHAAAAAQAAAAAAAAAABkEAAAATQklHaXBTZXJ2ZXJwYXNzcG9ydAkVAAAA
        AAkEAAAAAQoAAKC3KpE8VNWIBkQAAAAUOTcxNTA1OTMwLjUwMjE1LjAwMDAAAAAACQQAAAAAAAElAAAA
        IQAAAAkEAAAACgG6////1v///wEAAAAACTIAAAABAAAAAAAAAAAGSAAAABhCSUdpcFNlcnZlcnBvb2xf
        cGFzc3BvcnQGSQAAAAEvAAkEAAAAAQoAAGB6dxyMVNWIBksAAAAUMzUxMDc2ODc0LjUwMjE1LjAwMDAA
        AAAACQQAAAAAAAEmAAAAIQAAAAkEAAAACgGz////1v///wEAAAAABk4AAAANa3lmdy4xMjMwNi5jbgEA
        AAAAAAAAAAZPAAAABXJvdXRlBlAAAAABLwAJBAAAAAEKAAAggMBBB1XViAZSAAAAIDZmNTBiNTFmYWEx
        MWI5ODdlNTc2Y2RiMzAxZTU0NWM0AAAAAAkEAAAAAAABJwAAACEAAAAJBAAAAAoBrP///9b///8BAAAA
        AAkrAAAAAQAAAAAAAAAABlYAAAAUY3VycmVudF9jYXB0Y2hhX3R5cGUGVwAAAAEvAAkEAAAAAQoAAIDG
        FOCvWdWIBlkAAAABWgAAAAAJBAAAAAAAASgAAAAhAAAACQQAAAAKAaX////W////AQAAAAAJKwAAAAEA
        AAAAAAAAAAZdAAAADkJJR2lwU2VydmVyb3RuBl4AAAABLwAJBAAAAAEKAACAxhTgr1nViAZgAAAAFTE0
        MjM1MDc3MjIuMjQ2MTAuMDAwMAAAAAAJBAAAAAAACw==
</value>
  </data>
</root>